/*
 * Salesloft
 *
 * Salesloft
 *
 * The version of the OpenAPI document: 1.0.alpha
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DawsonSoft.Salesloft.Api.Core.Client.OpenAPIDateConverter;

namespace DawsonSoft.Salesloft.Api.Core.Model
{
    /// <summary>
    /// StepGroup
    /// </summary>
    [DataContract(Name = "StepGroup")]
    public partial class StepGroup : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StepGroup" /> class.
        /// </summary>
        /// <param name="automated">automated.</param>
        /// <param name="day">day.</param>
        /// <param name="dueImmediately">dueImmediately.</param>
        /// <param name="referenceId">referenceId.</param>
        /// <param name="steps">steps.</param>
        public StepGroup(bool? automated = default(bool?), int? day = default(int?), bool? dueImmediately = default(bool?), int? referenceId = default(int?), List<CadenceStep> steps = default(List<CadenceStep>))
        {
            this.Automated = automated;
            this.Day = day;
            this.DueImmediately = dueImmediately;
            this.ReferenceId = referenceId;
            this.Steps = steps;
        }

        /// <summary>
        /// Gets or Sets Automated
        /// </summary>
        [DataMember(Name = "automated", EmitDefaultValue = true)]
        public bool? Automated { get; set; }

        /// <summary>
        /// Gets or Sets Day
        /// </summary>
        [DataMember(Name = "day", EmitDefaultValue = true)]
        public int? Day { get; set; }

        /// <summary>
        /// Gets or Sets DueImmediately
        /// </summary>
        [DataMember(Name = "due_immediately", EmitDefaultValue = true)]
        public bool? DueImmediately { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceId
        /// </summary>
        [DataMember(Name = "reference_id", EmitDefaultValue = true)]
        public int? ReferenceId { get; set; }

        /// <summary>
        /// Gets or Sets Steps
        /// </summary>
        [DataMember(Name = "steps", EmitDefaultValue = true)]
        public List<CadenceStep> Steps { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class StepGroup {\n");
            sb.Append("  Automated: ").Append(Automated).Append("\n");
            sb.Append("  Day: ").Append(Day).Append("\n");
            sb.Append("  DueImmediately: ").Append(DueImmediately).Append("\n");
            sb.Append("  ReferenceId: ").Append(ReferenceId).Append("\n");
            sb.Append("  Steps: ").Append(Steps).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
