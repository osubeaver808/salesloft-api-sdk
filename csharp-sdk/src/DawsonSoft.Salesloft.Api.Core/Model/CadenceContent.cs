/*
 * Salesloft
 *
 * Salesloft
 *
 * The version of the OpenAPI document: 1.0.alpha
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DawsonSoft.Salesloft.Api.Core.Client.OpenAPIDateConverter;

namespace DawsonSoft.Salesloft.Api.Core.Model
{
    /// <summary>
    /// CadenceContent
    /// </summary>
    [DataContract(Name = "CadenceContent")]
    public partial class CadenceContent : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CadenceContent" /> class.
        /// </summary>
        /// <param name="settings">settings.</param>
        /// <param name="sharingSettings">sharingSettings.</param>
        /// <param name="stepGroups">stepGroups.</param>
        public CadenceContent(CadenceSettings settings = default(CadenceSettings), SharingSettings sharingSettings = default(SharingSettings), List<StepGroup> stepGroups = default(List<StepGroup>))
        {
            this.Settings = settings;
            this.SharingSettings = sharingSettings;
            this.StepGroups = stepGroups;
        }

        /// <summary>
        /// Gets or Sets Settings
        /// </summary>
        [DataMember(Name = "settings", EmitDefaultValue = true)]
        public CadenceSettings Settings { get; set; }

        /// <summary>
        /// Gets or Sets SharingSettings
        /// </summary>
        [DataMember(Name = "sharing_settings", EmitDefaultValue = true)]
        public SharingSettings SharingSettings { get; set; }

        /// <summary>
        /// Gets or Sets StepGroups
        /// </summary>
        [DataMember(Name = "step_groups", EmitDefaultValue = true)]
        public List<StepGroup> StepGroups { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CadenceContent {\n");
            sb.Append("  Settings: ").Append(Settings).Append("\n");
            sb.Append("  SharingSettings: ").Append(SharingSettings).Append("\n");
            sb.Append("  StepGroups: ").Append(StepGroups).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
