/*
 * Salesloft
 *
 * Salesloft
 *
 * The version of the OpenAPI document: 1.0.alpha
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DawsonSoft.Salesloft.Api.Core.Client.OpenAPIDateConverter;

namespace DawsonSoft.Salesloft.Api.Core.Model
{
    /// <summary>
    /// ExternalProperties
    /// </summary>
    [DataContract(Name = "ExternalProperties")]
    public partial class ExternalProperties : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExternalProperties" /> class.
        /// </summary>
        /// <param name="maEnabled">maEnabled.</param>
        /// <param name="maDevQaTools">maDevQaTools.</param>
        /// <param name="maMobileWorkflow">maMobileWorkflow.</param>
        /// <param name="maDarkMode">maDarkMode.</param>
        /// <param name="hotLeads">hotLeads.</param>
        /// <param name="peopleCrudAllowCreate">peopleCrudAllowCreate.</param>
        /// <param name="peopleCrudAllowDelete">peopleCrudAllowDelete.</param>
        /// <param name="linkedinOauthFlow">linkedinOauthFlow.</param>
        public ExternalProperties(bool? maEnabled = default(bool?), bool? maDevQaTools = default(bool?), bool? maMobileWorkflow = default(bool?), bool? maDarkMode = default(bool?), bool? hotLeads = default(bool?), bool? peopleCrudAllowCreate = default(bool?), bool? peopleCrudAllowDelete = default(bool?), bool? linkedinOauthFlow = default(bool?))
        {
            this.MaEnabled = maEnabled;
            this.MaDevQaTools = maDevQaTools;
            this.MaMobileWorkflow = maMobileWorkflow;
            this.MaDarkMode = maDarkMode;
            this.HotLeads = hotLeads;
            this.PeopleCrudAllowCreate = peopleCrudAllowCreate;
            this.PeopleCrudAllowDelete = peopleCrudAllowDelete;
            this.LinkedinOauthFlow = linkedinOauthFlow;
        }

        /// <summary>
        /// Gets or Sets MaEnabled
        /// </summary>
        [DataMember(Name = "ma_enabled", EmitDefaultValue = true)]
        public bool? MaEnabled { get; set; }

        /// <summary>
        /// Gets or Sets MaDevQaTools
        /// </summary>
        [DataMember(Name = "ma_dev_qa_tools", EmitDefaultValue = true)]
        public bool? MaDevQaTools { get; set; }

        /// <summary>
        /// Gets or Sets MaMobileWorkflow
        /// </summary>
        [DataMember(Name = "ma_mobile_workflow", EmitDefaultValue = true)]
        public bool? MaMobileWorkflow { get; set; }

        /// <summary>
        /// Gets or Sets MaDarkMode
        /// </summary>
        [DataMember(Name = "ma_dark_mode", EmitDefaultValue = true)]
        public bool? MaDarkMode { get; set; }

        /// <summary>
        /// Gets or Sets HotLeads
        /// </summary>
        [DataMember(Name = "hot_leads", EmitDefaultValue = true)]
        public bool? HotLeads { get; set; }

        /// <summary>
        /// Gets or Sets PeopleCrudAllowCreate
        /// </summary>
        [DataMember(Name = "people_crud_allow_create", EmitDefaultValue = true)]
        public bool? PeopleCrudAllowCreate { get; set; }

        /// <summary>
        /// Gets or Sets PeopleCrudAllowDelete
        /// </summary>
        [DataMember(Name = "people_crud_allow_delete", EmitDefaultValue = true)]
        public bool? PeopleCrudAllowDelete { get; set; }

        /// <summary>
        /// Gets or Sets LinkedinOauthFlow
        /// </summary>
        [DataMember(Name = "linkedin_oauth_flow", EmitDefaultValue = true)]
        public bool? LinkedinOauthFlow { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExternalProperties {\n");
            sb.Append("  MaEnabled: ").Append(MaEnabled).Append("\n");
            sb.Append("  MaDevQaTools: ").Append(MaDevQaTools).Append("\n");
            sb.Append("  MaMobileWorkflow: ").Append(MaMobileWorkflow).Append("\n");
            sb.Append("  MaDarkMode: ").Append(MaDarkMode).Append("\n");
            sb.Append("  HotLeads: ").Append(HotLeads).Append("\n");
            sb.Append("  PeopleCrudAllowCreate: ").Append(PeopleCrudAllowCreate).Append("\n");
            sb.Append("  PeopleCrudAllowDelete: ").Append(PeopleCrudAllowDelete).Append("\n");
            sb.Append("  LinkedinOauthFlow: ").Append(LinkedinOauthFlow).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
