/*
 * Salesloft
 *
 * Salesloft
 *
 * The version of the OpenAPI document: 1.0.alpha
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DawsonSoft.Salesloft.Api.Core.Client.OpenAPIDateConverter;

namespace DawsonSoft.Salesloft.Api.Core.Model
{
    /// <summary>
    /// PersonCreateRequest
    /// </summary>
    [DataContract(Name = "PersonCreateRequest")]
    public partial class PersonCreateRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PersonCreateRequest" /> class.
        /// </summary>
        /// <param name="emailAddress">emailAddress.</param>
        /// <param name="secondaryEmailAddress">secondaryEmailAddress.</param>
        /// <param name="personalEmailAddress">personalEmailAddress.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="phone">phone.</param>
        /// <param name="phoneExtension">phoneExtension.</param>
        /// <param name="mobilePhone">mobilePhone.</param>
        /// <param name="homePhone">homePhone.</param>
        /// <param name="linkedinUrl">linkedinUrl.</param>
        /// <param name="title">title.</param>
        /// <param name="city">city.</param>
        /// <param name="state">state.</param>
        /// <param name="country">country.</param>
        /// <param name="workCity">workCity.</param>
        /// <param name="workState">workState.</param>
        /// <param name="workCountry">workCountry.</param>
        /// <param name="personCompanyName">personCompanyName.</param>
        /// <param name="personCompanyWebsite">personCompanyWebsite.</param>
        /// <param name="personCompanyIndustry">personCompanyIndustry.</param>
        /// <param name="jobSeniority">jobSeniority.</param>
        /// <param name="doNotContact">doNotContact.</param>
        /// <param name="personalWebsite">personalWebsite.</param>
        /// <param name="twitterHandle">twitterHandle.</param>
        public PersonCreateRequest(string emailAddress = default(string), string secondaryEmailAddress = default(string), string personalEmailAddress = default(string), string firstName = default(string), string lastName = default(string), string phone = default(string), string phoneExtension = default(string), string mobilePhone = default(string), string homePhone = default(string), string linkedinUrl = default(string), string title = default(string), string city = default(string), string state = default(string), string country = default(string), string workCity = default(string), string workState = default(string), string workCountry = default(string), string personCompanyName = default(string), string personCompanyWebsite = default(string), string personCompanyIndustry = default(string), string jobSeniority = default(string), bool? doNotContact = default(bool?), string personalWebsite = default(string), string twitterHandle = default(string))
        {
            this.EmailAddress = emailAddress;
            this.SecondaryEmailAddress = secondaryEmailAddress;
            this.PersonalEmailAddress = personalEmailAddress;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Phone = phone;
            this.PhoneExtension = phoneExtension;
            this.MobilePhone = mobilePhone;
            this.HomePhone = homePhone;
            this.LinkedinUrl = linkedinUrl;
            this.Title = title;
            this.City = city;
            this.State = state;
            this.Country = country;
            this.WorkCity = workCity;
            this.WorkState = workState;
            this.WorkCountry = workCountry;
            this.PersonCompanyName = personCompanyName;
            this.PersonCompanyWebsite = personCompanyWebsite;
            this.PersonCompanyIndustry = personCompanyIndustry;
            this.JobSeniority = jobSeniority;
            this.DoNotContact = doNotContact;
            this.PersonalWebsite = personalWebsite;
            this.TwitterHandle = twitterHandle;
        }

        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name = "email_address", EmitDefaultValue = true)]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryEmailAddress
        /// </summary>
        [DataMember(Name = "secondary_email_address", EmitDefaultValue = true)]
        public string SecondaryEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets PersonalEmailAddress
        /// </summary>
        [DataMember(Name = "personal_email_address", EmitDefaultValue = true)]
        public string PersonalEmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "first_name", EmitDefaultValue = true)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "last_name", EmitDefaultValue = true)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name = "phone", EmitDefaultValue = true)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets PhoneExtension
        /// </summary>
        [DataMember(Name = "phone_extension", EmitDefaultValue = true)]
        public string PhoneExtension { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name = "mobile_phone", EmitDefaultValue = true)]
        public string MobilePhone { get; set; }

        /// <summary>
        /// Gets or Sets HomePhone
        /// </summary>
        [DataMember(Name = "home_phone", EmitDefaultValue = true)]
        public string HomePhone { get; set; }

        /// <summary>
        /// Gets or Sets LinkedinUrl
        /// </summary>
        [DataMember(Name = "linkedin_url", EmitDefaultValue = true)]
        public string LinkedinUrl { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name = "city", EmitDefaultValue = true)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = true)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name = "country", EmitDefaultValue = true)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets WorkCity
        /// </summary>
        [DataMember(Name = "work_city", EmitDefaultValue = true)]
        public string WorkCity { get; set; }

        /// <summary>
        /// Gets or Sets WorkState
        /// </summary>
        [DataMember(Name = "work_state", EmitDefaultValue = true)]
        public string WorkState { get; set; }

        /// <summary>
        /// Gets or Sets WorkCountry
        /// </summary>
        [DataMember(Name = "work_country", EmitDefaultValue = true)]
        public string WorkCountry { get; set; }

        /// <summary>
        /// Gets or Sets PersonCompanyName
        /// </summary>
        [DataMember(Name = "person_company_name", EmitDefaultValue = true)]
        public string PersonCompanyName { get; set; }

        /// <summary>
        /// Gets or Sets PersonCompanyWebsite
        /// </summary>
        [DataMember(Name = "person_company_website", EmitDefaultValue = true)]
        public string PersonCompanyWebsite { get; set; }

        /// <summary>
        /// Gets or Sets PersonCompanyIndustry
        /// </summary>
        [DataMember(Name = "person_company_industry", EmitDefaultValue = true)]
        public string PersonCompanyIndustry { get; set; }

        /// <summary>
        /// Gets or Sets JobSeniority
        /// </summary>
        [DataMember(Name = "job_seniority", EmitDefaultValue = true)]
        public string JobSeniority { get; set; }

        /// <summary>
        /// Gets or Sets DoNotContact
        /// </summary>
        [DataMember(Name = "do_not_contact", EmitDefaultValue = true)]
        public bool? DoNotContact { get; set; }

        /// <summary>
        /// Gets or Sets PersonalWebsite
        /// </summary>
        [DataMember(Name = "personal_website", EmitDefaultValue = true)]
        public string PersonalWebsite { get; set; }

        /// <summary>
        /// Gets or Sets TwitterHandle
        /// </summary>
        [DataMember(Name = "twitter_handle", EmitDefaultValue = true)]
        public string TwitterHandle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PersonCreateRequest {\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  SecondaryEmailAddress: ").Append(SecondaryEmailAddress).Append("\n");
            sb.Append("  PersonalEmailAddress: ").Append(PersonalEmailAddress).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  PhoneExtension: ").Append(PhoneExtension).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  HomePhone: ").Append(HomePhone).Append("\n");
            sb.Append("  LinkedinUrl: ").Append(LinkedinUrl).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  WorkCity: ").Append(WorkCity).Append("\n");
            sb.Append("  WorkState: ").Append(WorkState).Append("\n");
            sb.Append("  WorkCountry: ").Append(WorkCountry).Append("\n");
            sb.Append("  PersonCompanyName: ").Append(PersonCompanyName).Append("\n");
            sb.Append("  PersonCompanyWebsite: ").Append(PersonCompanyWebsite).Append("\n");
            sb.Append("  PersonCompanyIndustry: ").Append(PersonCompanyIndustry).Append("\n");
            sb.Append("  JobSeniority: ").Append(JobSeniority).Append("\n");
            sb.Append("  DoNotContact: ").Append(DoNotContact).Append("\n");
            sb.Append("  PersonalWebsite: ").Append(PersonalWebsite).Append("\n");
            sb.Append("  TwitterHandle: ").Append(TwitterHandle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
